@using WebTaskMaster.Models.Team
@using Humanizer
@using Manage_tasks_Biznes_Logic.Model
@using WebTaskMaster.Controllers

@model IEnumerable<TeamIndexModel>

@{
    ViewData["Title"] = "Teams";
}

<div class="container text-center text-wrap text-break">
    <div class="row justify-content-center">
        <h1 class="col-12 col-sm-9 col-lg-10">Teams</h1>

        @* Create Team Modal button  *@
        <button id="createTeamModalBtn" class="btn btn-primary col-12 col-sm-3 col-lg-2" type="button"
                data-bs-toggle="modal" data-bs-target="#createTeamModal">
            Add team
        </button>
    </div>

    @{
        var teamNum = 0;

        foreach (var team in Model)
        {
            teamNum++;

            var teamDescription = team.NameModel.Description;


            <div class="row justify-content-start my-2 px-2 py-2 bg-primary bg-opacity-25">
                <a class="btn btn-outline-secondary fs-5 col-12 col-sm-1"
                   asp-action="Details" asp-route-teamId="@team.Id"
                   data-bs-toggle-tooltip="tooltip" data-bs-trigger="hover" data-bs-title="Team details">
                    @teamNum
                </a>

                <p class="fs-5 col-12 col-sm-11 col-md-5 col-xl-3">@team.NameModel.Name</p>

                @if (teamDescription is not null && teamDescription.Length > 20)
                {
                    teamDescription = teamDescription.Truncate(20);

                    <p class="fs-5 col-12 col-md-5 col-xl-3">@teamDescription</p>
                }

                <div class="fs-5 col-12 col-md-5 col-xl-3">
                    <label asp-for="@team.NumOfMembers"></label>
                    @team.NumOfMembers
                </div>

                @if (team.LeaderModel is not null)
                {
                    <div class="col-12">
                        <div class="row justify-content-center my-2 mx-2 px-1 py-1 bg-info bg-opacity-25">
                            <a class="btn btn-outline-secondary fs-5 col-12 col-md-2"
                               asp-controller="User" asp-action="Details" asp-route-userId="@team.LeaderModel.Id"
                               data-bs-toggle-tooltip="tooltip" data-bs-trigger="hover" data-bs-title="User details">
                                <label asp-for="@team.LeaderModel"></label>
                            </a>

                            <p class="fs-5 col-12 col-md-5">@team.LeaderModel.FirstName</p>
                            <p class="fs-5 col-12 col-md-5">@team.LeaderModel.LastName</p>
                        </div>
                    </div>
                }
            </div>
        }
    }
</div>

@* Create Team Modal *@
<partial name="_CreatePartial" model="new TeamNameModel()" />

<partial name="_ToastPartial" />

@section Scripts
    {
    @{
        var modalBtnId = ViewData["ActivateModal"] switch
        {
            "Create" => "createTeamModalBtn",
            _ => null
        };

        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @* Activate modal on page load. Needed to display server side validation result. *@
    @if (modalBtnId is not null)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                document.getElementById("@modalBtnId").click();
            });
        </script>
    }

    @* tooltips *@
    <script type="text/javascript">
        tooltipTriggerList = document.querySelectorAll('[data-bs-toggle-tooltip="tooltip"]');
        tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
    </script>

    @* show toast for team edit response *@
    @if (TempData["ToastMessage"] is not null)
    {
        <script type="text/javascript">
            bootstrap.Toast.getOrCreateInstance(document.getElementById('teamEditToast')).show();
        </script>
    }
}